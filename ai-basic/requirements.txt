# AI 기초 실습 필수 패키지
# Lab 1-4 모든 실습에서 사용되는 패키지들을 통합 관리

# Core AI/ML 라이브러리 (Lab 1-4에서 공통 사용)
openai>=1.3.0
numpy>=1.21.0
scikit-learn>=1.0.0
pandas>=1.3.0

# 환경 설정 (전체 Lab 공통)
python-dotenv>=0.19.0

# 벡터 데이터베이스 (Lab 2-4에서 사용)
chromadb>=0.4.0

# 자연어 처리 (Lab 1, 3-4에서 사용)
tiktoken>=0.5.0
nltk>=3.8.0
rouge-score>=0.1.2

# 시각화 (Lab 1, 4에서 사용)
matplotlib>=3.5.0
seaborn>=0.11.0
plotly>=5.0.0

# 웹 앱 프레임워크 (Lab 3-4에서 사용)
streamlit>=1.28.0

# LangChain 프레임워크 (Lab 3에서 사용)
langchain>=0.1.0
langchain-openai>=0.0.5
langchain-community>=0.0.5
rank_bm25>=0.2.0

# Lab 4 추가 패키지들

# Mock API 서버 (FastAPI + uvicorn)
fastapi>=0.100.0
uvicorn>=0.20.0
httpx>=0.24.0
requests>=2.28.0
urllib3>=1.26.0

# MCP 통신 및 비동기 처리
websockets>=11.0.0
aiohttp>=3.8.0

# 데이터 검증 및 직렬화
pydantic>=2.0.0
typing-extensions>=4.5.0

# 평가 및 벤치마킹 (기존 Lab 4 고급 기능, 필요시 사용)
bert-score>=0.3.13
evaluate>=0.4.0
datasets>=2.14.0

# 고급 임베딩 모델 (기존 Lab 4 고급 기능, 필요시 사용)
sentence-transformers>=2.2.0
transformers>=4.30.0
torch>=2.0.0

# 시스템 모니터링 및 유틸리티
psutil>=5.9.0
tqdm>=4.64.0

# 개발 및 테스트 도구
pytest>=7.0.0
pytest-asyncio>=0.21.0
jupyter>=1.0.0
ipykernel>=6.15.0

# ============================================
# Lab별 필수 패키지 요약
# ============================================
# 
# Lab 1 (임베딩 기초):
#   openai, numpy, scikit-learn, matplotlib, seaborn, pandas, python-dotenv, tiktoken
# 
# Lab 2 (벡터 데이터베이스):
#   chromadb + Lab 1 패키지
# 
# Lab 3 (RAG 시스템):
#   streamlit, langchain, langchain-openai, langchain-community, rank_bm25, plotly + Lab 2 패키지
# 
# Lab 4 (지능형 챗봇):
#   fastapi, uvicorn, httpx, websockets, aiohttp, pydantic, typing-extensions, pytest, pytest-asyncio + Lab 3 패키지
# 
# Lab 5-9 (예정):
#   langchain 기반 에이전트 시스템 + 기존 패키지
# 
# ============================================
# 전체 설치 방법
# ============================================
# 
# 모든 패키지 한 번에 설치:
#   pip install -r requirements.txt
# 
# 가상환경 사용 권장:
#   conda create -n ai-basic python=3.10
#   conda activate ai-basic
#   pip install -r requirements.txt
# 
# ============================================
# Lab 4 Mock API 서버 실행 방법
# ============================================
# 
# 방법 1: 자동 실행 스크립트 사용 (권장)
#   cd lab04-intelligent-chatbot
#   python start_apis.py
# 
# 방법 2: 개별 실행 (각각 별도 터미널)
#   cd lab04-intelligent-chatbot
#   python mock_apis/weather_api.py      # http://localhost:8001
#   python mock_apis/calendar_api.py     # http://localhost:8002
#   python mock_apis/file_manager_api.py # http://localhost:8003
#   python mock_apis/notification_api.py # http://localhost:8004
# 
# 웹 인터페이스 실행:
#   python -m streamlit run web_interface/chatbot_ui.py 